#!/bin/bash

# Start rubinius builder
#
# 1: Package name (String)
# 2: Package build dir (String)
#
# Code: No
# Echo: No
rbxBuilder() {
  checkVersionCompatibility "1.6.0"

  requireCompiler

  local pkg pkg_dir copts iopts prfx fail
  local start_time end_time grc_time

  pkg="$1"
  pkg_dir="$2"

  copts="${CONFOPTS}"
  iopts="${INSTOPTS}"
  prfx="${XPREFIX:-${prefix}}"

  exportCompilerOpts

  [[ -z "$gem_prefix" ]] && gem_prefix="$prfx"

  pushd "$pkg_dir" &> /dev/null

    showm "Building... "

    [[ -n "$verbose" ]] && show ""

    start_time=$(now)

    exit_protect=true

    spinnerOn

    if [[ $verbose ]] ; then
      { showe "bundle install"
        bundle install
        [[ $? -ne 0 ]] && fail=true && break
        showe "./configure --prefix=$prfx $copts"
        ./configure --prefix="$prfx" $copts
        [[ $? -ne 0 ]] && fail=true && break
        showe "rake install $iopts --trace"
        rake install $iopts --trace
        [[ $? -ne 0 ]] && fail=true && break
      } &>> "$output"
    else
      { bundle install
        [[ $? -ne 0 ]] && fail=true && break
        ./configure --prefix="$prfx" $copts
        [[ $? -ne 0 ]] && fail=true && break
        rake install $iopts
        [[ $? -ne 0 ]] && fail=true && break
      } &>> "$log"
    fi

    spinnerOff

    if [[ $fail ]] ; then
      unset exit_protect
      buildFailed "$prfx"
      return 1
    fi

    end_time=$(now)
    grc_time=$(getGraceTime "$start_time" "$end_time")

    show "${CL_GREEN}DONE${CL_NORM} ${CL_GREY}($grc_time)${CL_NORM}"

    echo -n > "$log"

    unset exit_protect

  popd &> /dev/null
}
